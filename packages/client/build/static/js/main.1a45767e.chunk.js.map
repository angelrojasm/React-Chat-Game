{"version":3,"sources":["pages/ChatHub.tsx","components/ChatMessageInput.tsx","components/UserList.tsx","components/ChatMessage.tsx","components/ChatList.tsx","pages/Chatroom.tsx","App.tsx","index.tsx"],"names":["ChatHub","history","useHistory","useState","username","setUsername","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","onClick","push","ChatMessageInput","socket","message","setMessage","emit","style","backgroundColor","UserList","data","userList","setUserList","useEffect","length","console","log","map","user","key","ChatMessage","ownMessage","ChatList","messageList","setMessageList","on","messages","Chatroom","location","socketIOClient","setSocket","state","client","response","objectArray","Object","entries","disconnect","to","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a45767e.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatHub = (): JSX.Element => {\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n\n  const verifyName = () => {};\n  return (\n    <div className=\"h-screen w-screen bg-purple-200 flex flex-col items-center justify-center\">\n      <h3 className=\"font-normal text-4xl leading-4 font-sans mt-9 mr-6\">\n        Welcome to the Chat\n      </h3>\n      <p className=\"text-gray-500 text-md my-3 mr-6 mb-9\">\n        Tell us your name to access the chat.\n      </p>\n      <form\n        className=\"mb-96\"\n        onSubmit={(e) => {\n          e.preventDefault();\n        }}\n      >\n        <input\n          type=\"text\"\n          className=\"focus:outline-none leading-2 h-12 rounded p-1\"\n          placeholder=\"What's Your name?\"\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n        <button\n          className=\"bg-purple-600 hover:bg-purple-500 focus:outline-none focus: ring-1 focus:ring-purple-600 rounded-md p-3 text-white font-medium w-32 sm:inline-block ml-2\"\n          onClick={(e) => {\n            e.preventDefault();\n            verifyName();\n            history.push(\"/chat\", { username: username });\n          }}\n        >\n          Join the Chat\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatHub;\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nconst ChatMessageInput = ({ socket }: any): JSX.Element => {\n  const [message, setMessage] = useState<string>(\"\");\n\n  function sendMessage() {\n    socket.emit(\"new-message\", message);\n    setMessage(\"\");\n  }\n\n  return (\n    <div className=\"w-full flex justify-center\">\n      <form\n        className=\"w-full mx-auto flex justify-center\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          sendMessage();\n        }}\n      >\n        <input\n          value={message}\n          onChange={(e) => {\n            setMessage(e.target.value);\n          }}\n          type=\"text\"\n          placeholder=\"Say something in the chat!\"\n          className=\"bg-gray-200 rounded-sm text-black h-16 pl-4 w-3/4 focus:outline-none focus:ring-1 focus:ring-gray-300 \"\n        />\n        <button\n          type=\"submit\"\n          className=\"rounded-lg h-16 w-16 p-0 focus:outline-none focus:ring-1 focus:ring-green-600\"\n          style={{ backgroundColor: \"#28a745\" }}\n        >\n          <SendIcon className=\"text-white\" />\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatMessageInput;\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nconst UserList = ({ data }: any): JSX.Element => {\n  const [userList, setUserList] = useState<[string, any][]>([]);\n\n  useEffect(() => {\n    data && setUserList(data);\n  });\n\n  function getUserList() {\n    console.log(userList);\n    return userList.map((user, key) => {\n      return <p key={key}>{user[1]}</p>;\n    });\n  }\n  return (\n    <div className=\"w-full h-full\">\n      <p className=\"ml-2 text-red-600\">Online Players: {userList.length}</p>\n      <div className=\" flex flex-col items-center mt-4\">{getUserList()}</div>\n    </div>\n  );\n};\n\nexport default UserList;\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\n\ntype AppProps = {\n  ownMessage?: boolean;\n  user?: string;\n  message: string;\n};\nconst ChatMessage = ({ ownMessage, user, message }: AppProps): JSX.Element => {\n  return ownMessage ? (\n    <div className=\"px-6 py-4 max-w-sm mx-auto bg-green-200 rounded-xl shadow-md flex items-center space-x-4 border my-2 \">\n      <div className=\"px-2 max-w-sm truncate whitespace-normal\">\n        <p className=\"text-sm font-medium text-black\">{message}</p>\n      </div>\n    </div>\n  ) : (\n    <div className=\"px-6 py-3 max-w-sm mx-auto bg-gray-200 rounded-xl shadow-md flex items-center space-x-4 border my-2 \">\n      <div className=\"px-2 max-w-sm truncate whitespace-normal\">\n        <p className=\"text-gray-500 text-xs\">{user}</p>\n        <p className=\"text-sm font-medium text-black\">{message}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatMessage;\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport SocketIOClient from \"socket.io-client\";\nimport ChatMessage from \"./ChatMessage\";\n\ntype AppProps = {\n  socket: any;\n  username: string;\n};\n\nconst ChatList = ({ socket, username }: AppProps): JSX.Element => {\n  const [messageList, setMessageList] = useState<[string, string][]>();\n\n  useEffect(() => {\n    socket.on(\"message-list\", (messages: [string, string][]) => {\n      setMessageList(messages);\n    });\n  }, []);\n\n  function generateMessages(): any {\n    return messageList?.map((message: [string, string], key: any) => {\n      return message[0] === username ? (\n        <div className=\"w-full flex justify-end\">\n          <div className=\"mr-4\">\n            <ChatMessage ownMessage message={message[1]} />\n          </div>\n        </div>\n      ) : (\n        <div className=\"w-full flex justify-start\">\n          <div className=\"ml-4\">\n            <ChatMessage user={message[0]} message={message[1]} />\n          </div>\n        </div>\n      );\n    });\n  }\n  return (\n    <div className=\"w-full h-full mx-auto overflow-auto flex flex-col justify-start items-center\">\n      {generateMessages()}\n    </div>\n  );\n};\n\nexport default ChatList;\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport socketIOClient from \"socket.io-client\";\nimport ChatMessageInput from \"../components/ChatMessageInput\";\nimport UserList from \"../components/UserList\";\nimport ChatList from \"../components/ChatList\";\n\ntype AppProps = {\n  location: {\n    state: {\n      username: string;\n    };\n    key: string;\n    pathname: string;\n    search: string;\n    hash: string;\n  };\n};\n\nconst Chatroom = ({ location }: AppProps): JSX.Element => {\n  const [socket, setSocket] = useState(null || socketIOClient);\n  const [userList, setUserList] = useState<[string, any][]>([]);\n  const [username, setUsername] = useState<string>(\n    location.state ? location.state.username : \"\"\n  );\n  useEffect(() => {\n    if (socket === null) {\n      const client = socketIOClient(\"/\");\n      setSocket(client);\n    }\n    socket.on(\"username-request\", () => {\n      socket.emit(\"username-response\", location.state.username);\n    });\n    socket.on(\"user-list\", (response: any) => {\n      let objectArray = Object.entries(response);\n      setUserList(objectArray);\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n    //eslint-disable-next-line\n  }, [socket]);\n\n  return location.state ? (\n    <div className=\"h-screen w-screen bg-purple-200 flex justify-center items-center flex-col\">\n      <h2 className=\"font-normal text-4xl leading-4 font-sans\">Chatroom</h2>\n      <div className=\"bg-white w-3/5 h-3/4 border-gray-300 border rounded my-8 relative shadow m-0 p-0\">\n        <div className=\"border-gray-400 border-r h-full absolute bottom-0 left-0 w-1/5 m-0 p-0\">\n          {/** Insert UserList Component here */}\n          <UserList data={userList} />\n        </div>\n        <div className=\"absolute top-0 right-0 w-4/5 h-5/6 \">\n          {/** Insert ChatList Component here */}\n          <ChatList socket={socket} username={username} />\n        </div>\n        <div className=\"absolute bottom-0 right-0 w-4/5 h-1/6 border-t border-gray-400 flex items-center\">\n          <ChatMessageInput socket={socket} />\n        </div>\n      </div>\n    </div>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n\nexport default Chatroom;\n","import * as React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport ChatHub from \"./pages/ChatHub\";\nimport Chatroom from \"./pages/Chatroom\";\n\nconst App = (): JSX.Element => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={ChatHub} />\n        <Route path=\"/chat\" exact component={Chatroom} />\n        <Redirect to={\"/\"} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}